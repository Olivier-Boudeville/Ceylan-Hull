#!/bin/sh

USAGE="$0 selects recursively from current directory the files that should be committed (either added or modified), and commits them. For each of the modified files, shows the diff with previous version before."


initial_dir=$(pwd)

if [ -d ".svn" ] ; then

	TOOL="svn"

	# Removes any pending lock:
	svn cleanup

	OUTPUT=`svn status --no-ignore 2>/dev/null`

	ADDED=$(echo ${OUTPUT} | sed 's|A |\nA |g' | sed 's|C |\nC |g' | sed 's|D |\nD |g' | sed 's|M |\nM |g' | sed 's|R |\nR |g' | sed 's|X |\nX |g' | sed 's|? |\n? |g' | sed 's|! |\n! |g' | sed 's|~ |\n~ |g' | sed 's|I |\nI |g' | sed 's| n |\n? |g' | sed 's|^n |\n? |g' | grep '^A' | awk '{print $2}')


	MODIFIED=$(echo ${OUTPUT} | sed 's|A |\nA |g' | sed 's|C |\nC |g' | sed 's|D |\nD |g' | sed 's|M |\nM |g' | sed 's|R |\nR |g' | sed 's|X |\nX |g' | sed 's|? |\n? |g' | sed 's|! |\n! |g' | sed 's|~ |\n~ |g' | sed 's|I |\nI |g' | sed 's| n |\n? |g' | sed 's|^n |\n? |g' | grep  '^M' | awk '{print $2}')


elif [ -d "CVS" ] ; then

	TOOL="cvs"

	NON_UP_TO_DATE="Locally Modified|Locally Added|Locally Removed|Needs Checkout|Needs Patch|Needs Merge|Unresolved Conflict|File had conflicts on merge|?"

	OUTPUT="$(cvs status 2>/dev/null | egrep "${NON_UP_TO_DATE}" )"

	ADDED=$(echo ${OUTPUT} | sed 's|File:|\nFile:|g' | grep 'Locally Added' | awk '{print $2}')

	MODIFIED=$(echo ${OUTPUT} | sed 's|File:|\nFile:|g' | grep 'Locally Modified' | awk '{print $2}')

else

	# Supposing GIT here.

	TOOL="git"

	# Only from current directory:
	OUTPUT=`git status --porcelain 2>/dev/null .`
	#echo "OUTPUT = $OUTPUT"

	# A problem is that, even in porcelain mode, offsets may be used to display
	# status. For example, 'M a_file' or ' M afile' may be both used. The
	# pattern '^ \?M' allows to include the two cases (i.e. whether or not a
	# space has been inserted).

	ADDED=$(echo "${OUTPUT}" | grep -e '^ \?A' | awk '{print $2}')
	#echo "ADDED = $ADDED"

	MODIFIED=$(echo "${OUTPUT}" | grep '^ \?M' | awk '{print $2}')
	#echo "MODIFIED= $MODIFIED"

	DELETED=$(echo "${OUTPUT}" |  grep -e '^ \?D' | awk '{print $2}')
	#echo "DELETED= $DELETED"

	UNKNOWN=$(echo "${OUTPUT}" | grep -e '^ \?M' | awk '{print $2}')
	#echo "UNKNOWN= $UNKNOWN"


	 # In porcelain mode, all paths are relative to the root of the repository,
	 # we must thus go there:
	relative_to_root=$(git rev-parse --show-cdup)

	# (empty string is already there)
	if [ -n "${relative_to_root}" ] ; then

		cd "${relative_to_root}"

	fi

fi


if [ -n "${ADDED}" ] ; then

	echo
	echo "####### Added file(s): ${ADDED}"

	for f in ${ADDED} ; do

		echo
		echo " + content of $f: "
		echo
		more $f
		${TOOL} ci $f

	done

fi

if [ -n "${MODIFIED}" ] ; then

	echo
	echo "####### Modified file(s): ${MODIFIED}"
	for f in ${MODIFIED} ; do

		echo
		echo " + diff for $f: "
		#dci $f | more
		dci $f
		echo

	done

fi

if [ "$TOOL" = "git" ] ; then

	# To avoid listing all files from the root:
	cd $initial_dir

fi

echo "Full commit done, status for files is now:"
toci
